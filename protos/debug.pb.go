// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: protos/debug.proto

package protos

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The logging levels available in Prysm as an enum.
type LoggingLevelRequest_Level int32

const (
	LoggingLevelRequest_INFO  LoggingLevelRequest_Level = 0
	LoggingLevelRequest_DEBUG LoggingLevelRequest_Level = 1
	LoggingLevelRequest_TRACE LoggingLevelRequest_Level = 2
)

// Enum value maps for LoggingLevelRequest_Level.
var (
	LoggingLevelRequest_Level_name = map[int32]string{
		0: "INFO",
		1: "DEBUG",
		2: "TRACE",
	}
	LoggingLevelRequest_Level_value = map[string]int32{
		"INFO":  0,
		"DEBUG": 1,
		"TRACE": 2,
	}
)

func (x LoggingLevelRequest_Level) Enum() *LoggingLevelRequest_Level {
	p := new(LoggingLevelRequest_Level)
	*p = x
	return p
}

func (x LoggingLevelRequest_Level) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LoggingLevelRequest_Level) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_debug_proto_enumTypes[0].Descriptor()
}

func (LoggingLevelRequest_Level) Type() protoreflect.EnumType {
	return &file_protos_debug_proto_enumTypes[0]
}

func (x LoggingLevelRequest_Level) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LoggingLevelRequest_Level.Descriptor instead.
func (LoggingLevelRequest_Level) EnumDescriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{5, 0}
}

type InclusionSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *InclusionSlotRequest) Reset() {
	*x = InclusionSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionSlotRequest) ProtoMessage() {}

func (x *InclusionSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionSlotRequest.ProtoReflect.Descriptor instead.
func (*InclusionSlotRequest) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{0}
}

func (x *InclusionSlotRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *InclusionSlotRequest) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type InclusionSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slot uint64 `protobuf:"varint,2,opt,name=slot,proto3" json:"slot,omitempty"`
}

func (x *InclusionSlotResponse) Reset() {
	*x = InclusionSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InclusionSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InclusionSlotResponse) ProtoMessage() {}

func (x *InclusionSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InclusionSlotResponse.ProtoReflect.Descriptor instead.
func (*InclusionSlotResponse) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{1}
}

func (x *InclusionSlotResponse) GetSlot() uint64 {
	if x != nil {
		return x.Slot
	}
	return 0
}

type BeaconStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to QueryFilter:
	//	*BeaconStateRequest_Slot
	//	*BeaconStateRequest_BlockRoot
	QueryFilter isBeaconStateRequest_QueryFilter `protobuf_oneof:"query_filter"`
}

func (x *BeaconStateRequest) Reset() {
	*x = BeaconStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BeaconStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BeaconStateRequest) ProtoMessage() {}

func (x *BeaconStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BeaconStateRequest.ProtoReflect.Descriptor instead.
func (*BeaconStateRequest) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{2}
}

func (m *BeaconStateRequest) GetQueryFilter() isBeaconStateRequest_QueryFilter {
	if m != nil {
		return m.QueryFilter
	}
	return nil
}

func (x *BeaconStateRequest) GetSlot() uint64 {
	if x, ok := x.GetQueryFilter().(*BeaconStateRequest_Slot); ok {
		return x.Slot
	}
	return 0
}

func (x *BeaconStateRequest) GetBlockRoot() []byte {
	if x, ok := x.GetQueryFilter().(*BeaconStateRequest_BlockRoot); ok {
		return x.BlockRoot
	}
	return nil
}

type isBeaconStateRequest_QueryFilter interface {
	isBeaconStateRequest_QueryFilter()
}

type BeaconStateRequest_Slot struct {
	// The slot corresponding to a desired beacon state.
	Slot uint64 `protobuf:"varint,1,opt,name=slot,proto3,oneof"`
}

type BeaconStateRequest_BlockRoot struct {
	// The block root corresponding to a desired beacon state.
	BlockRoot []byte `protobuf:"bytes,2,opt,name=block_root,json=blockRoot,proto3,oneof"`
}

func (*BeaconStateRequest_Slot) isBeaconStateRequest_QueryFilter() {}

func (*BeaconStateRequest_BlockRoot) isBeaconStateRequest_QueryFilter() {}

type BlockRequestByRoot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockRoot []byte `protobuf:"bytes,1,opt,name=block_root,json=blockRoot,proto3" json:"block_root,omitempty"`
}

func (x *BlockRequestByRoot) Reset() {
	*x = BlockRequestByRoot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockRequestByRoot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockRequestByRoot) ProtoMessage() {}

func (x *BlockRequestByRoot) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockRequestByRoot.ProtoReflect.Descriptor instead.
func (*BlockRequestByRoot) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{3}
}

func (x *BlockRequestByRoot) GetBlockRoot() []byte {
	if x != nil {
		return x.BlockRoot
	}
	return nil
}

type SSZResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Returns an ssz-encoded byte slice as a response.
	Encoded []byte `protobuf:"bytes,1,opt,name=encoded,proto3" json:"encoded,omitempty"`
}

func (x *SSZResponse) Reset() {
	*x = SSZResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SSZResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSZResponse) ProtoMessage() {}

func (x *SSZResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSZResponse.ProtoReflect.Descriptor instead.
func (*SSZResponse) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{4}
}

func (x *SSZResponse) GetEncoded() []byte {
	if x != nil {
		return x.Encoded
	}
	return nil
}

type LoggingLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Level LoggingLevelRequest_Level `protobuf:"varint,1,opt,name=level,proto3,enum=protos.LoggingLevelRequest_Level" json:"level,omitempty"`
}

func (x *LoggingLevelRequest) Reset() {
	*x = LoggingLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoggingLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoggingLevelRequest) ProtoMessage() {}

func (x *LoggingLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoggingLevelRequest.ProtoReflect.Descriptor instead.
func (*LoggingLevelRequest) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{5}
}

func (x *LoggingLevelRequest) GetLevel() LoggingLevelRequest_Level {
	if x != nil {
		return x.Level
	}
	return LoggingLevelRequest_INFO
}

type DebugPeerResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Responses []*DebugPeerResponse `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
}

func (x *DebugPeerResponses) Reset() {
	*x = DebugPeerResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugPeerResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugPeerResponses) ProtoMessage() {}

func (x *DebugPeerResponses) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugPeerResponses.ProtoReflect.Descriptor instead.
func (*DebugPeerResponses) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{6}
}

func (x *DebugPeerResponses) GetResponses() []*DebugPeerResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type DebugPeerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Listening addresses know of the peer.
	ListeningAddresses []string `protobuf:"bytes,1,rep,name=listening_addresses,json=listeningAddresses,proto3" json:"listening_addresses,omitempty"`
	// Direction of current connection.
	Direction PeerDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=protos.PeerDirection" json:"direction,omitempty"`
	// Current connection between host and peer.
	ConnectionState ConnectionState `protobuf:"varint,3,opt,name=connection_state,json=connectionState,proto3,enum=protos.ConnectionState" json:"connection_state,omitempty"`
	// Peer ID of peer.
	PeerId string `protobuf:"bytes,4,opt,name=peer_id,json=peerId,proto3" json:"peer_id,omitempty"`
	// ENR of peer at the current moment.
	Enr string `protobuf:"bytes,5,opt,name=enr,proto3" json:"enr,omitempty"`
	// Peer Info of the peer containing all relevant metadata.
	PeerInfo *DebugPeerResponse_PeerInfo `protobuf:"bytes,6,opt,name=peer_info,json=peerInfo,proto3" json:"peer_info,omitempty"`
	// Peer Status of the peer.
	PeerStatus *Status `protobuf:"bytes,7,opt,name=peer_status,json=peerStatus,proto3" json:"peer_status,omitempty"`
	// Last know update time for peer status.
	LastUpdated uint64 `protobuf:"varint,8,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	// Score Info of the peer.
	ScoreInfo *ScoreInfo `protobuf:"bytes,9,opt,name=score_info,json=scoreInfo,proto3" json:"score_info,omitempty"`
}

func (x *DebugPeerResponse) Reset() {
	*x = DebugPeerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugPeerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugPeerResponse) ProtoMessage() {}

func (x *DebugPeerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugPeerResponse.ProtoReflect.Descriptor instead.
func (*DebugPeerResponse) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{7}
}

func (x *DebugPeerResponse) GetListeningAddresses() []string {
	if x != nil {
		return x.ListeningAddresses
	}
	return nil
}

func (x *DebugPeerResponse) GetDirection() PeerDirection {
	if x != nil {
		return x.Direction
	}
	return PeerDirection_UNKNOWN
}

func (x *DebugPeerResponse) GetConnectionState() ConnectionState {
	if x != nil {
		return x.ConnectionState
	}
	return ConnectionState_DISCONNECTED
}

func (x *DebugPeerResponse) GetPeerId() string {
	if x != nil {
		return x.PeerId
	}
	return ""
}

func (x *DebugPeerResponse) GetEnr() string {
	if x != nil {
		return x.Enr
	}
	return ""
}

func (x *DebugPeerResponse) GetPeerInfo() *DebugPeerResponse_PeerInfo {
	if x != nil {
		return x.PeerInfo
	}
	return nil
}

func (x *DebugPeerResponse) GetPeerStatus() *Status {
	if x != nil {
		return x.PeerStatus
	}
	return nil
}

func (x *DebugPeerResponse) GetLastUpdated() uint64 {
	if x != nil {
		return x.LastUpdated
	}
	return 0
}

func (x *DebugPeerResponse) GetScoreInfo() *ScoreInfo {
	if x != nil {
		return x.ScoreInfo
	}
	return nil
}

// The Scoring related information of the particular peer.
type ScoreInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OverallScore float32 `protobuf:"fixed32,1,opt,name=overall_score,json=overallScore,proto3" json:"overall_score,omitempty"`
	// Amount of processed blocks provided by
	// the peer.
	ProcessedBlocks uint64 `protobuf:"varint,2,opt,name=processed_blocks,json=processedBlocks,proto3" json:"processed_blocks,omitempty"`
	// Related block provider score.
	BlockProviderScore float32 `protobuf:"fixed32,3,opt,name=block_provider_score,json=blockProviderScore,proto3" json:"block_provider_score,omitempty"`
	// Relevant scores by particular topic.
	TopicScores map[string]*TopicScoreSnapshot `protobuf:"bytes,4,rep,name=topic_scores,json=topicScores,proto3" json:"topic_scores,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Gossip Score for peer.
	GossipScore float32 `protobuf:"fixed32,5,opt,name=gossip_score,json=gossipScore,proto3" json:"gossip_score,omitempty"`
	// Behaviour penalty of peer.
	BehaviourPenalty float32 `protobuf:"fixed32,6,opt,name=behaviour_penalty,json=behaviourPenalty,proto3" json:"behaviour_penalty,omitempty"`
	// Returns the current validation error(if it exists).
	ValidationError string `protobuf:"bytes,7,opt,name=validation_error,json=validationError,proto3" json:"validation_error,omitempty"`
}

func (x *ScoreInfo) Reset() {
	*x = ScoreInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScoreInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScoreInfo) ProtoMessage() {}

func (x *ScoreInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScoreInfo.ProtoReflect.Descriptor instead.
func (*ScoreInfo) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{8}
}

func (x *ScoreInfo) GetOverallScore() float32 {
	if x != nil {
		return x.OverallScore
	}
	return 0
}

func (x *ScoreInfo) GetProcessedBlocks() uint64 {
	if x != nil {
		return x.ProcessedBlocks
	}
	return 0
}

func (x *ScoreInfo) GetBlockProviderScore() float32 {
	if x != nil {
		return x.BlockProviderScore
	}
	return 0
}

func (x *ScoreInfo) GetTopicScores() map[string]*TopicScoreSnapshot {
	if x != nil {
		return x.TopicScores
	}
	return nil
}

func (x *ScoreInfo) GetGossipScore() float32 {
	if x != nil {
		return x.GossipScore
	}
	return 0
}

func (x *ScoreInfo) GetBehaviourPenalty() float32 {
	if x != nil {
		return x.BehaviourPenalty
	}
	return 0
}

func (x *ScoreInfo) GetValidationError() string {
	if x != nil {
		return x.ValidationError
	}
	return ""
}

type TopicScoreSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Time a peer has spent in the gossip mesh.
	TimeInMesh uint64 `protobuf:"varint,1,opt,name=time_in_mesh,json=timeInMesh,proto3" json:"time_in_mesh,omitempty"`
	// This is the number of first message deliveries in the topic.
	FirstMessageDeliveries float32 `protobuf:"fixed32,2,opt,name=first_message_deliveries,json=firstMessageDeliveries,proto3" json:"first_message_deliveries,omitempty"`
	// This is the number of message deliveries in the mesh, within the MeshMessageDeliveriesWindow of
	// message validation.It effectively tracks first and near-first
	// deliveries, ie a message seen from a mesh peer before we have forwarded it to them.
	MeshMessageDeliveries float32 `protobuf:"fixed32,3,opt,name=mesh_message_deliveries,json=meshMessageDeliveries,proto3" json:"mesh_message_deliveries,omitempty"`
	// This is the number of invalid messages in the topic from the peer.
	InvalidMessageDeliveries float32 `protobuf:"fixed32,4,opt,name=invalid_message_deliveries,json=invalidMessageDeliveries,proto3" json:"invalid_message_deliveries,omitempty"`
}

func (x *TopicScoreSnapshot) Reset() {
	*x = TopicScoreSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TopicScoreSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TopicScoreSnapshot) ProtoMessage() {}

func (x *TopicScoreSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TopicScoreSnapshot.ProtoReflect.Descriptor instead.
func (*TopicScoreSnapshot) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{9}
}

func (x *TopicScoreSnapshot) GetTimeInMesh() uint64 {
	if x != nil {
		return x.TimeInMesh
	}
	return 0
}

func (x *TopicScoreSnapshot) GetFirstMessageDeliveries() float32 {
	if x != nil {
		return x.FirstMessageDeliveries
	}
	return 0
}

func (x *TopicScoreSnapshot) GetMeshMessageDeliveries() float32 {
	if x != nil {
		return x.MeshMessageDeliveries
	}
	return 0
}

func (x *TopicScoreSnapshot) GetInvalidMessageDeliveries() float32 {
	if x != nil {
		return x.InvalidMessageDeliveries
	}
	return 0
}

// Peer related metadata that is useful for debugging.
type DebugPeerResponse_PeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Metadata of the peer, containing their bitfield
	// and sequence number.
	MetadataV0 *MetaDataV0 `protobuf:"bytes,1,opt,name=metadataV0,proto3" json:"metadataV0,omitempty"`
	MetadataV1 *MetaDataV1 `protobuf:"bytes,2,opt,name=metadataV1,proto3" json:"metadataV1,omitempty"`
	// List of protocols the peer supports.
	Protocols []string `protobuf:"bytes,3,rep,name=protocols,proto3" json:"protocols,omitempty"`
	// Number of times peer has been penalised.
	FaultCount uint64 `protobuf:"varint,4,opt,name=fault_count,json=faultCount,proto3" json:"fault_count,omitempty"`
	// Protocol Version peer is running.
	ProtocolVersion string `protobuf:"bytes,5,opt,name=protocol_version,json=protocolVersion,proto3" json:"protocol_version,omitempty"`
	// Agent Version peer is running.
	AgentVersion string `protobuf:"bytes,6,opt,name=agent_version,json=agentVersion,proto3" json:"agent_version,omitempty"`
	// Latency of responses from peer(in ms).
	PeerLatency uint64 `protobuf:"varint,7,opt,name=peer_latency,json=peerLatency,proto3" json:"peer_latency,omitempty"`
}

func (x *DebugPeerResponse_PeerInfo) Reset() {
	*x = DebugPeerResponse_PeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_debug_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugPeerResponse_PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugPeerResponse_PeerInfo) ProtoMessage() {}

func (x *DebugPeerResponse_PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_debug_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugPeerResponse_PeerInfo.ProtoReflect.Descriptor instead.
func (*DebugPeerResponse_PeerInfo) Descriptor() ([]byte, []int) {
	return file_protos_debug_proto_rawDescGZIP(), []int{7, 0}
}

func (x *DebugPeerResponse_PeerInfo) GetMetadataV0() *MetaDataV0 {
	if x != nil {
		return x.MetadataV0
	}
	return nil
}

func (x *DebugPeerResponse_PeerInfo) GetMetadataV1() *MetaDataV1 {
	if x != nil {
		return x.MetadataV1
	}
	return nil
}

func (x *DebugPeerResponse_PeerInfo) GetProtocols() []string {
	if x != nil {
		return x.Protocols
	}
	return nil
}

func (x *DebugPeerResponse_PeerInfo) GetFaultCount() uint64 {
	if x != nil {
		return x.FaultCount
	}
	return 0
}

func (x *DebugPeerResponse_PeerInfo) GetProtocolVersion() string {
	if x != nil {
		return x.ProtocolVersion
	}
	return ""
}

func (x *DebugPeerResponse_PeerInfo) GetAgentVersion() string {
	if x != nil {
		return x.AgentVersion
	}
	return ""
}

func (x *DebugPeerResponse_PeerInfo) GetPeerLatency() uint64 {
	if x != nil {
		return x.PeerLatency
	}
	return 0
}

var File_protos_debug_proto protoreflect.FileDescriptor

var file_protos_debug_proto_rawDesc = []byte{
	0x0a, 0x12, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x14, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x32,
	0x70, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x66, 0x0a, 0x14, 0x49,
	0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x2a, 0x82, 0xb5, 0x18, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73,
	0x6c, 0x6f, 0x74, 0x22, 0x57, 0x0a, 0x15, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x04,
	0x73, 0x6c, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x42, 0x2a, 0x82, 0xb5, 0x18, 0x26,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52,
	0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65,
	0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x22, 0x87, 0x01, 0x0a,
	0x12, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x73, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x42, 0x2a, 0x82, 0xb5, 0x18, 0x26, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x63, 0x6f,
	0x72, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x73, 0x6c, 0x6f, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72,
	0x6f, 0x6f, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x33, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x6f, 0x6f, 0x74, 0x22, 0x27, 0x0a, 0x0b, 0x53,
	0x53, 0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x22, 0x77, 0x0a, 0x13, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x22, 0x27, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x08, 0x0a,
	0x04, 0x49, 0x4e, 0x46, 0x4f, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x45, 0x42, 0x55, 0x47,
	0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x43, 0x45, 0x10, 0x02, 0x22, 0x4d, 0x0a,
	0x12, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x22, 0xd6, 0x05, 0x0a,
	0x11, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x13, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x12, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0f, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x65, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x65, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x6e, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x65, 0x6e, 0x72, 0x12, 0x3f, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x70, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2f, 0x0a, 0x0b, 0x70, 0x65, 0x65, 0x72,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x70,
	0x65, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x0b, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x30, 0x0a, 0x0a,
	0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa4,
	0x02, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x30, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x56, 0x30, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x30, 0x12,
	0x32, 0x0a, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x56, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x56, 0x31, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x56, 0x31, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c,
	0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x6c, 0x61, 0x74, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x70, 0x65, 0x65, 0x72, 0x4c, 0x61,
	0x74, 0x65, 0x6e, 0x63, 0x79, 0x22, 0xab, 0x03, 0x0a, 0x09, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x6f, 0x76, 0x65, 0x72, 0x61, 0x6c, 0x6c, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x6f, 0x76, 0x65, 0x72,
	0x61, 0x6c, 0x6c, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x12, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x73,
	0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x67, 0x6f, 0x73, 0x73, 0x69, 0x70, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x75, 0x72, 0x5f, 0x70, 0x65, 0x6e,
	0x61, 0x6c, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x75, 0x72, 0x50, 0x65, 0x6e, 0x61, 0x6c, 0x74, 0x79, 0x12, 0x29, 0x0a, 0x10,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x1a, 0x5a, 0x0a, 0x10, 0x54, 0x6f, 0x70, 0x69, 0x63,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x30, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0xe6, 0x01, 0x0a, 0x12, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x73, 0x68, 0x12, 0x38, 0x0a, 0x18,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x16,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x36, 0x0a, 0x17, 0x6d, 0x65, 0x73, 0x68, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x15, 0x6d, 0x65, 0x73, 0x68, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x3c,
	0x0a, 0x1a, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x18, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x69, 0x65, 0x73, 0x32, 0xc3, 0x04, 0x0a,
	0x05, 0x44, 0x65, 0x62, 0x75, 0x67, 0x12, 0x5c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x65, 0x61,
	0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x42, 0x65, 0x61, 0x63, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x53,
	0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x12, 0x11, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x79, 0x52, 0x6f, 0x6f, 0x74, 0x1a, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x53, 0x5a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x7a, 0x6f, 0x6e, 0x64,
	0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x63, 0x0a, 0x0f,
	0x53, 0x65, 0x74, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12,
	0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x22, 0x13, 0x2f, 0x7a,
	0x6f, 0x6e, 0x64, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e,
	0x67, 0x12, 0x5a, 0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x65, 0x65, 0x72, 0x73, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x7a, 0x6f, 0x6e,
	0x64, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x53, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x50, 0x65, 0x65, 0x72, 0x12, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x73, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12,
	0x12, 0x10, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x6e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x49, 0x6e,
	0x63, 0x6c, 0x75, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x7a, 0x6f,
	0x6e, 0x64, 0x2f, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2f, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_debug_proto_rawDescOnce sync.Once
	file_protos_debug_proto_rawDescData = file_protos_debug_proto_rawDesc
)

func file_protos_debug_proto_rawDescGZIP() []byte {
	file_protos_debug_proto_rawDescOnce.Do(func() {
		file_protos_debug_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_debug_proto_rawDescData)
	})
	return file_protos_debug_proto_rawDescData
}

var file_protos_debug_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_debug_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_protos_debug_proto_goTypes = []interface{}{
	(LoggingLevelRequest_Level)(0),     // 0: protos.LoggingLevelRequest.Level
	(*InclusionSlotRequest)(nil),       // 1: protos.InclusionSlotRequest
	(*InclusionSlotResponse)(nil),      // 2: protos.InclusionSlotResponse
	(*BeaconStateRequest)(nil),         // 3: protos.BeaconStateRequest
	(*BlockRequestByRoot)(nil),         // 4: protos.BlockRequestByRoot
	(*SSZResponse)(nil),                // 5: protos.SSZResponse
	(*LoggingLevelRequest)(nil),        // 6: protos.LoggingLevelRequest
	(*DebugPeerResponses)(nil),         // 7: protos.DebugPeerResponses
	(*DebugPeerResponse)(nil),          // 8: protos.DebugPeerResponse
	(*ScoreInfo)(nil),                  // 9: protos.ScoreInfo
	(*TopicScoreSnapshot)(nil),         // 10: protos.TopicScoreSnapshot
	(*DebugPeerResponse_PeerInfo)(nil), // 11: protos.DebugPeerResponse.PeerInfo
	nil,                                // 12: protos.ScoreInfo.TopicScoresEntry
	(PeerDirection)(0),                 // 13: protos.PeerDirection
	(ConnectionState)(0),               // 14: protos.ConnectionState
	(*Status)(nil),                     // 15: protos.Status
	(*MetaDataV0)(nil),                 // 16: protos.MetaDataV0
	(*MetaDataV1)(nil),                 // 17: protos.MetaDataV1
	(*emptypb.Empty)(nil),              // 18: google.protobuf.Empty
	(*PeerRequest)(nil),                // 19: protos.PeerRequest
}
var file_protos_debug_proto_depIdxs = []int32{
	0,  // 0: protos.LoggingLevelRequest.level:type_name -> protos.LoggingLevelRequest.Level
	8,  // 1: protos.DebugPeerResponses.responses:type_name -> protos.DebugPeerResponse
	13, // 2: protos.DebugPeerResponse.direction:type_name -> protos.PeerDirection
	14, // 3: protos.DebugPeerResponse.connection_state:type_name -> protos.ConnectionState
	11, // 4: protos.DebugPeerResponse.peer_info:type_name -> protos.DebugPeerResponse.PeerInfo
	15, // 5: protos.DebugPeerResponse.peer_status:type_name -> protos.Status
	9,  // 6: protos.DebugPeerResponse.score_info:type_name -> protos.ScoreInfo
	12, // 7: protos.ScoreInfo.topic_scores:type_name -> protos.ScoreInfo.TopicScoresEntry
	16, // 8: protos.DebugPeerResponse.PeerInfo.metadataV0:type_name -> protos.MetaDataV0
	17, // 9: protos.DebugPeerResponse.PeerInfo.metadataV1:type_name -> protos.MetaDataV1
	10, // 10: protos.ScoreInfo.TopicScoresEntry.value:type_name -> protos.TopicScoreSnapshot
	3,  // 11: protos.Debug.GetBeaconState:input_type -> protos.BeaconStateRequest
	4,  // 12: protos.Debug.GetBlock:input_type -> protos.BlockRequestByRoot
	6,  // 13: protos.Debug.SetLoggingLevel:input_type -> protos.LoggingLevelRequest
	18, // 14: protos.Debug.ListPeers:input_type -> google.protobuf.Empty
	19, // 15: protos.Debug.GetPeer:input_type -> protos.PeerRequest
	1,  // 16: protos.Debug.GetInclusionSlot:input_type -> protos.InclusionSlotRequest
	5,  // 17: protos.Debug.GetBeaconState:output_type -> protos.SSZResponse
	5,  // 18: protos.Debug.GetBlock:output_type -> protos.SSZResponse
	18, // 19: protos.Debug.SetLoggingLevel:output_type -> google.protobuf.Empty
	7,  // 20: protos.Debug.ListPeers:output_type -> protos.DebugPeerResponses
	8,  // 21: protos.Debug.GetPeer:output_type -> protos.DebugPeerResponse
	2,  // 22: protos.Debug.GetInclusionSlot:output_type -> protos.InclusionSlotResponse
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_protos_debug_proto_init() }
func file_protos_debug_proto_init() {
	if File_protos_debug_proto != nil {
		return
	}
	file_protos_options_proto_init()
	file_protos_node_proto_init()
	file_protos_p2p_messages_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_debug_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InclusionSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InclusionSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BeaconStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockRequestByRoot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SSZResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoggingLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugPeerResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugPeerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScoreInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TopicScoreSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_debug_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugPeerResponse_PeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_debug_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*BeaconStateRequest_Slot)(nil),
		(*BeaconStateRequest_BlockRoot)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_debug_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_protos_debug_proto_goTypes,
		DependencyIndexes: file_protos_debug_proto_depIdxs,
		EnumInfos:         file_protos_debug_proto_enumTypes,
		MessageInfos:      file_protos_debug_proto_msgTypes,
	}.Build()
	File_protos_debug_proto = out.File
	file_protos_debug_proto_rawDesc = nil
	file_protos_debug_proto_goTypes = nil
	file_protos_debug_proto_depIdxs = nil
}

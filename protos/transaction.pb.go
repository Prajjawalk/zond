// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.8.0
// source: protos/transaction.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Stake struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DilithiumPks [][]byte `protobuf:"bytes,1,rep,name=dilithium_pks,json=dilithiumPks,proto3" json:"dilithium_pks,omitempty"`
	Destake      bool     `protobuf:"varint,2,opt,name=destake,proto3" json:"destake,omitempty"`
}

func (x *Stake) Reset() {
	*x = Stake{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_transaction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stake) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stake) ProtoMessage() {}

func (x *Stake) ProtoReflect() protoreflect.Message {
	mi := &file_protos_transaction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stake.ProtoReflect.Descriptor instead.
func (*Stake) Descriptor() ([]byte, []int) {
	return file_protos_transaction_proto_rawDescGZIP(), []int{0}
}

func (x *Stake) GetDilithiumPks() [][]byte {
	if x != nil {
		return x.DilithiumPks
	}
	return nil
}

func (x *Stake) GetDestake() bool {
	if x != nil {
		return x.Destake
	}
	return false
}

type Transfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddrsTo  [][]byte `protobuf:"bytes,1,rep,name=addrs_to,json=addrsTo,proto3" json:"addrs_to,omitempty"`
	Amounts  []uint64 `protobuf:"varint,2,rep,packed,name=amounts,proto3" json:"amounts,omitempty"`
	SlavePks [][]byte `protobuf:"bytes,3,rep,name=slave_pks,json=slavePks,proto3" json:"slave_pks,omitempty"`
	Message  []byte   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *Transfer) Reset() {
	*x = Transfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_transaction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transfer) ProtoMessage() {}

func (x *Transfer) ProtoReflect() protoreflect.Message {
	mi := &file_protos_transaction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transfer.ProtoReflect.Descriptor instead.
func (*Transfer) Descriptor() ([]byte, []int) {
	return file_protos_transaction_proto_rawDescGZIP(), []int{1}
}

func (x *Transfer) GetAddrsTo() [][]byte {
	if x != nil {
		return x.AddrsTo
	}
	return nil
}

func (x *Transfer) GetAmounts() []uint64 {
	if x != nil {
		return x.Amounts
	}
	return nil
}

func (x *Transfer) GetSlavePks() [][]byte {
	if x != nil {
		return x.SlavePks
	}
	return nil
}

func (x *Transfer) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type CoinBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockProposer       []byte   `protobuf:"bytes,1,opt,name=block_proposer,json=blockProposer,proto3" json:"block_proposer,omitempty"`
	Attestors           [][]byte `protobuf:"bytes,2,rep,name=attestors,proto3" json:"attestors,omitempty"`
	BlockProposerReward uint64   `protobuf:"varint,3,opt,name=block_proposer_reward,json=blockProposerReward,proto3" json:"block_proposer_reward,omitempty"`
	AttestorReward      []uint64 `protobuf:"varint,4,rep,packed,name=attestor_reward,json=attestorReward,proto3" json:"attestor_reward,omitempty"`
}

func (x *CoinBase) Reset() {
	*x = CoinBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_transaction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoinBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoinBase) ProtoMessage() {}

func (x *CoinBase) ProtoReflect() protoreflect.Message {
	mi := &file_protos_transaction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoinBase.ProtoReflect.Descriptor instead.
func (*CoinBase) Descriptor() ([]byte, []int) {
	return file_protos_transaction_proto_rawDescGZIP(), []int{2}
}

func (x *CoinBase) GetBlockProposer() []byte {
	if x != nil {
		return x.BlockProposer
	}
	return nil
}

func (x *CoinBase) GetAttestors() [][]byte {
	if x != nil {
		return x.Attestors
	}
	return nil
}

func (x *CoinBase) GetBlockProposerReward() uint64 {
	if x != nil {
		return x.BlockProposerReward
	}
	return 0
}

func (x *CoinBase) GetAttestorReward() []uint64 {
	if x != nil {
		return x.AttestorReward
	}
	return nil
}

type Transaction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NetworkId       uint64 `protobuf:"varint,1,opt,name=network_id,json=networkId,proto3" json:"network_id,omitempty"`
	MasterAddr      []byte `protobuf:"bytes,2,opt,name=master_addr,json=masterAddr,proto3" json:"master_addr,omitempty"`
	Fee             uint64 `protobuf:"varint,3,opt,name=fee,proto3" json:"fee,omitempty"`
	Nonce           uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	Pk              []byte `protobuf:"bytes,5,opt,name=pk,proto3" json:"pk,omitempty"`
	Signature       []byte `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
	TransactionHash []byte `protobuf:"bytes,7,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	// Types that are assignable to Type:
	//	*Transaction_CoinBase
	//	*Transaction_Stake
	//	*Transaction_Transfer
	Type isTransaction_Type `protobuf_oneof:"type"`
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_transaction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_protos_transaction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_protos_transaction_proto_rawDescGZIP(), []int{3}
}

func (x *Transaction) GetNetworkId() uint64 {
	if x != nil {
		return x.NetworkId
	}
	return 0
}

func (x *Transaction) GetMasterAddr() []byte {
	if x != nil {
		return x.MasterAddr
	}
	return nil
}

func (x *Transaction) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

func (x *Transaction) GetNonce() uint64 {
	if x != nil {
		return x.Nonce
	}
	return 0
}

func (x *Transaction) GetPk() []byte {
	if x != nil {
		return x.Pk
	}
	return nil
}

func (x *Transaction) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

func (x *Transaction) GetTransactionHash() []byte {
	if x != nil {
		return x.TransactionHash
	}
	return nil
}

func (m *Transaction) GetType() isTransaction_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (x *Transaction) GetCoinBase() *CoinBase {
	if x, ok := x.GetType().(*Transaction_CoinBase); ok {
		return x.CoinBase
	}
	return nil
}

func (x *Transaction) GetStake() *Stake {
	if x, ok := x.GetType().(*Transaction_Stake); ok {
		return x.Stake
	}
	return nil
}

func (x *Transaction) GetTransfer() *Transfer {
	if x, ok := x.GetType().(*Transaction_Transfer); ok {
		return x.Transfer
	}
	return nil
}

type isTransaction_Type interface {
	isTransaction_Type()
}

type Transaction_CoinBase struct {
	CoinBase *CoinBase `protobuf:"bytes,8,opt,name=coin_base,json=coinBase,proto3,oneof"`
}

type Transaction_Stake struct {
	Stake *Stake `protobuf:"bytes,9,opt,name=stake,proto3,oneof"`
}

type Transaction_Transfer struct {
	Transfer *Transfer `protobuf:"bytes,10,opt,name=transfer,proto3,oneof"`
}

func (*Transaction_CoinBase) isTransaction_Type() {}

func (*Transaction_Stake) isTransaction_Type() {}

func (*Transaction_Transfer) isTransaction_Type() {}

var File_protos_transaction_proto protoreflect.FileDescriptor

var file_protos_transaction_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x22, 0x46, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64,
	0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0c, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x50, 0x6b, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x64, 0x65, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x22, 0x76, 0x0a, 0x08, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x64, 0x64, 0x72, 0x73, 0x5f,
	0x74, 0x6f, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x73, 0x54,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x07, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08,
	0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x22, 0xac, 0x01, 0x0a, 0x08, 0x43, 0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74,
	0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73,
	0x65, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x65,
	0x73, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x04, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x22, 0xde, 0x02, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x03,
	0x66, 0x65, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x70, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x69, 0x6e, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x43,
	0x6f, 0x69, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x48, 0x00, 0x52, 0x08, 0x63, 0x6f, 0x69, 0x6e, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x08, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_transaction_proto_rawDescOnce sync.Once
	file_protos_transaction_proto_rawDescData = file_protos_transaction_proto_rawDesc
)

func file_protos_transaction_proto_rawDescGZIP() []byte {
	file_protos_transaction_proto_rawDescOnce.Do(func() {
		file_protos_transaction_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_transaction_proto_rawDescData)
	})
	return file_protos_transaction_proto_rawDescData
}

var file_protos_transaction_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_protos_transaction_proto_goTypes = []interface{}{
	(*Stake)(nil),       // 0: protos.Stake
	(*Transfer)(nil),    // 1: protos.Transfer
	(*CoinBase)(nil),    // 2: protos.CoinBase
	(*Transaction)(nil), // 3: protos.Transaction
}
var file_protos_transaction_proto_depIdxs = []int32{
	2, // 0: protos.Transaction.coin_base:type_name -> protos.CoinBase
	0, // 1: protos.Transaction.stake:type_name -> protos.Stake
	1, // 2: protos.Transaction.transfer:type_name -> protos.Transfer
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protos_transaction_proto_init() }
func file_protos_transaction_proto_init() {
	if File_protos_transaction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_transaction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stake); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_transaction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_transaction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoinBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_transaction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Transaction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_transaction_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*Transaction_CoinBase)(nil),
		(*Transaction_Stake)(nil),
		(*Transaction_Transfer)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_transaction_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_transaction_proto_goTypes,
		DependencyIndexes: file_protos_transaction_proto_depIdxs,
		MessageInfos:      file_protos_transaction_proto_msgTypes,
	}.Build()
	File_protos_transaction_proto = out.File
	file_protos_transaction_proto_rawDesc = nil
	file_protos_transaction_proto_goTypes = nil
	file_protos_transaction_proto_depIdxs = nil
}

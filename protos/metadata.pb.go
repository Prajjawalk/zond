// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.8.0
// source: protos/metadata.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DilithiumMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash      []byte `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	DilithiumPk []byte `protobuf:"bytes,2,opt,name=dilithium_pk,json=dilithiumPk,proto3" json:"dilithium_pk,omitempty"`
	Address     []byte `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Stake       bool   `protobuf:"varint,4,opt,name=stake,proto3" json:"stake,omitempty"`
	Balance     uint64 `protobuf:"varint,5,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *DilithiumMetaData) Reset() {
	*x = DilithiumMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DilithiumMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DilithiumMetaData) ProtoMessage() {}

func (x *DilithiumMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DilithiumMetaData.ProtoReflect.Descriptor instead.
func (*DilithiumMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{0}
}

func (x *DilithiumMetaData) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *DilithiumMetaData) GetDilithiumPk() []byte {
	if x != nil {
		return x.DilithiumPk
	}
	return nil
}

func (x *DilithiumMetaData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *DilithiumMetaData) GetStake() bool {
	if x != nil {
		return x.Stake
	}
	return false
}

func (x *DilithiumMetaData) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type SlaveMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash  []byte `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Address []byte `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	SlavePk []byte `protobuf:"bytes,3,opt,name=slave_pk,json=slavePk,proto3" json:"slave_pk,omitempty"`
}

func (x *SlaveMetaData) Reset() {
	*x = SlaveMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlaveMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlaveMetaData) ProtoMessage() {}

func (x *SlaveMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlaveMetaData.ProtoReflect.Descriptor instead.
func (*SlaveMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{1}
}

func (x *SlaveMetaData) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *SlaveMetaData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *SlaveMetaData) GetSlavePk() []byte {
	if x != nil {
		return x.SlavePk
	}
	return nil
}

type OTSIndexMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash     []byte   `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	Address    []byte   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	PageNumber uint64   `protobuf:"varint,3,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	Bitfield   [][]byte `protobuf:"bytes,4,rep,name=bitfield,proto3" json:"bitfield,omitempty"`
}

func (x *OTSIndexMetaData) Reset() {
	*x = OTSIndexMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OTSIndexMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OTSIndexMetaData) ProtoMessage() {}

func (x *OTSIndexMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OTSIndexMetaData.ProtoReflect.Descriptor instead.
func (*OTSIndexMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{2}
}

func (x *OTSIndexMetaData) GetTxHash() []byte {
	if x != nil {
		return x.TxHash
	}
	return nil
}

func (x *OTSIndexMetaData) GetAddress() []byte {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *OTSIndexMetaData) GetPageNumber() uint64 {
	if x != nil {
		return x.PageNumber
	}
	return 0
}

func (x *OTSIndexMetaData) GetBitfield() [][]byte {
	if x != nil {
		return x.Bitfield
	}
	return nil
}

type BlockMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParentHeaderHash         []byte   `protobuf:"bytes,1,opt,name=parent_header_hash,json=parentHeaderHash,proto3" json:"parent_header_hash,omitempty"`
	HeaderHash               []byte   `protobuf:"bytes,2,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
	SlotNumber               uint64   `protobuf:"varint,3,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	ChildHeaderHashes        [][]byte `protobuf:"bytes,4,rep,name=child_header_hashes,json=childHeaderHashes,proto3" json:"child_header_hashes,omitempty"`
	FinalizedChildHeaderHash []byte   `protobuf:"bytes,5,opt,name=finalized_child_header_hash,json=finalizedChildHeaderHash,proto3" json:"finalized_child_header_hash,omitempty"`
}

func (x *BlockMetaData) Reset() {
	*x = BlockMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockMetaData) ProtoMessage() {}

func (x *BlockMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockMetaData.ProtoReflect.Descriptor instead.
func (*BlockMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{3}
}

func (x *BlockMetaData) GetParentHeaderHash() []byte {
	if x != nil {
		return x.ParentHeaderHash
	}
	return nil
}

func (x *BlockMetaData) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *BlockMetaData) GetSlotNumber() uint64 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *BlockMetaData) GetChildHeaderHashes() [][]byte {
	if x != nil {
		return x.ChildHeaderHashes
	}
	return nil
}

func (x *BlockMetaData) GetFinalizedChildHeaderHash() []byte {
	if x != nil {
		return x.FinalizedChildHeaderHash
	}
	return nil
}

type EpochMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                       uint64          `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	PrevSlotLastBlockHeaderHash []byte          `protobuf:"bytes,2,opt,name=prev_slot_last_block_header_hash,json=prevSlotLastBlockHeaderHash,proto3" json:"prev_slot_last_block_header_hash,omitempty"`
	SlotInfo                    []*SlotInfo     `protobuf:"bytes,3,rep,name=slot_info,json=slotInfo,proto3" json:"slot_info,omitempty"`
	Validators                  [][]byte        `protobuf:"bytes,4,rep,name=validators,proto3" json:"validators,omitempty"`
	PrevEpochStakeData          *EpochStakeData `protobuf:"bytes,5,opt,name=prev_epoch_stake_data,json=prevEpochStakeData,proto3" json:"prev_epoch_stake_data,omitempty"`
}

func (x *EpochMetaData) Reset() {
	*x = EpochMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochMetaData) ProtoMessage() {}

func (x *EpochMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochMetaData.ProtoReflect.Descriptor instead.
func (*EpochMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{4}
}

func (x *EpochMetaData) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EpochMetaData) GetPrevSlotLastBlockHeaderHash() []byte {
	if x != nil {
		return x.PrevSlotLastBlockHeaderHash
	}
	return nil
}

func (x *EpochMetaData) GetSlotInfo() []*SlotInfo {
	if x != nil {
		return x.SlotInfo
	}
	return nil
}

func (x *EpochMetaData) GetValidators() [][]byte {
	if x != nil {
		return x.Validators
	}
	return nil
}

func (x *EpochMetaData) GetPrevEpochStakeData() *EpochStakeData {
	if x != nil {
		return x.PrevEpochStakeData
	}
	return nil
}

type EpochStakeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalStakeAmountFound   uint64 `protobuf:"varint,1,opt,name=total_stake_amount_found,json=totalStakeAmountFound,proto3" json:"total_stake_amount_found,omitempty"`
	TotalStakeAmountAlloted uint64 `protobuf:"varint,2,opt,name=total_stake_amount_alloted,json=totalStakeAmountAlloted,proto3" json:"total_stake_amount_alloted,omitempty"`
}

func (x *EpochStakeData) Reset() {
	*x = EpochStakeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochStakeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochStakeData) ProtoMessage() {}

func (x *EpochStakeData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochStakeData.ProtoReflect.Descriptor instead.
func (*EpochStakeData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{5}
}

func (x *EpochStakeData) GetTotalStakeAmountFound() uint64 {
	if x != nil {
		return x.TotalStakeAmountFound
	}
	return 0
}

func (x *EpochStakeData) GetTotalStakeAmountAlloted() uint64 {
	if x != nil {
		return x.TotalStakeAmountAlloted
	}
	return 0
}

type SlotInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotLeader uint64   `protobuf:"varint,1,opt,name=slot_leader,json=slotLeader,proto3" json:"slot_leader,omitempty"`
	Attestors  []uint64 `protobuf:"varint,2,rep,packed,name=attestors,proto3" json:"attestors,omitempty"`
}

func (x *SlotInfo) Reset() {
	*x = SlotInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SlotInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SlotInfo) ProtoMessage() {}

func (x *SlotInfo) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SlotInfo.ProtoReflect.Descriptor instead.
func (*SlotInfo) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{6}
}

func (x *SlotInfo) GetSlotLeader() uint64 {
	if x != nil {
		return x.SlotLeader
	}
	return 0
}

func (x *SlotInfo) GetAttestors() []uint64 {
	if x != nil {
		return x.Attestors
	}
	return nil
}

type MainChainMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FinalizedBlockHeaderHash []byte `protobuf:"bytes,1,opt,name=finalized_block_header_hash,json=finalizedBlockHeaderHash,proto3" json:"finalized_block_header_hash,omitempty"`
	FinalizedBlockSlotNumber uint64 `protobuf:"varint,2,opt,name=finalized_block_slot_number,json=finalizedBlockSlotNumber,proto3" json:"finalized_block_slot_number,omitempty"`
	LastBlockHeaderHash      []byte `protobuf:"bytes,3,opt,name=last_block_header_hash,json=lastBlockHeaderHash,proto3" json:"last_block_header_hash,omitempty"`
	LastBlockSlotNumber      uint64 `protobuf:"varint,4,opt,name=last_block_slot_number,json=lastBlockSlotNumber,proto3" json:"last_block_slot_number,omitempty"`
}

func (x *MainChainMetaData) Reset() {
	*x = MainChainMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MainChainMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainChainMetaData) ProtoMessage() {}

func (x *MainChainMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainChainMetaData.ProtoReflect.Descriptor instead.
func (*MainChainMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{7}
}

func (x *MainChainMetaData) GetFinalizedBlockHeaderHash() []byte {
	if x != nil {
		return x.FinalizedBlockHeaderHash
	}
	return nil
}

func (x *MainChainMetaData) GetFinalizedBlockSlotNumber() uint64 {
	if x != nil {
		return x.FinalizedBlockSlotNumber
	}
	return 0
}

func (x *MainChainMetaData) GetLastBlockHeaderHash() []byte {
	if x != nil {
		return x.LastBlockHeaderHash
	}
	return nil
}

func (x *MainChainMetaData) GetLastBlockSlotNumber() uint64 {
	if x != nil {
		return x.LastBlockSlotNumber
	}
	return 0
}

type EpochBlockHashesMetaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch                   uint64                     `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	BlockHashesBySlotNumber []*BlockHashesBySlotNumber `protobuf:"bytes,2,rep,name=block_hashes_by_slot_number,json=blockHashesBySlotNumber,proto3" json:"block_hashes_by_slot_number,omitempty"`
}

func (x *EpochBlockHashesMetaData) Reset() {
	*x = EpochBlockHashesMetaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochBlockHashesMetaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochBlockHashesMetaData) ProtoMessage() {}

func (x *EpochBlockHashesMetaData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochBlockHashesMetaData.ProtoReflect.Descriptor instead.
func (*EpochBlockHashesMetaData) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{8}
}

func (x *EpochBlockHashesMetaData) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EpochBlockHashesMetaData) GetBlockHashesBySlotNumber() []*BlockHashesBySlotNumber {
	if x != nil {
		return x.BlockHashesBySlotNumber
	}
	return nil
}

type BlockHashesBySlotNumber struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber   uint64   `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	HeaderHashes [][]byte `protobuf:"bytes,2,rep,name=header_hashes,json=headerHashes,proto3" json:"header_hashes,omitempty"`
}

func (x *BlockHashesBySlotNumber) Reset() {
	*x = BlockHashesBySlotNumber{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_metadata_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockHashesBySlotNumber) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockHashesBySlotNumber) ProtoMessage() {}

func (x *BlockHashesBySlotNumber) ProtoReflect() protoreflect.Message {
	mi := &file_protos_metadata_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockHashesBySlotNumber.ProtoReflect.Descriptor instead.
func (*BlockHashesBySlotNumber) Descriptor() ([]byte, []int) {
	return file_protos_metadata_proto_rawDescGZIP(), []int{9}
}

func (x *BlockHashesBySlotNumber) GetSlotNumber() uint64 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *BlockHashesBySlotNumber) GetHeaderHashes() [][]byte {
	if x != nil {
		return x.HeaderHashes
	}
	return nil
}

var File_protos_metadata_proto protoreflect.FileDescriptor

var file_protos_metadata_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x22,
	0x99, 0x01, 0x0a, 0x11, 0x44, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x5f, 0x70, 0x6b, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x69, 0x6c, 0x69, 0x74, 0x68, 0x69, 0x75, 0x6d, 0x50,
	0x6b, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6b,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x5d, 0x0a, 0x0d, 0x53,
	0x6c, 0x61, 0x76, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x74,
	0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x73, 0x6c, 0x61, 0x76, 0x65, 0x50, 0x6b, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x4f,
	0x54, 0x53, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x08, 0x62, 0x69, 0x74, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x22,
	0xee, 0x01, 0x0a, 0x0d, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x11,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x86, 0x02, 0x0a, 0x0d, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x45, 0x0a, 0x20, 0x70, 0x72, 0x65, 0x76,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x1b, 0x70, 0x72, 0x65, 0x76, 0x53, 0x6c, 0x6f, 0x74, 0x4c, 0x61, 0x73, 0x74,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12,
	0x2d, 0x0a, 0x09, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x53, 0x6c, 0x6f, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e,
	0x0a, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x49,
	0x0a, 0x15, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x73, 0x74, 0x61,
	0x6b, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x6b,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x70, 0x72, 0x65, 0x76, 0x45, 0x70, 0x6f, 0x63, 0x68,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x86, 0x01, 0x0a, 0x0e, 0x45, 0x70,
	0x6f, 0x63, 0x68, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x1a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x73,
	0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f,
	0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x74,
	0x65, 0x64, 0x22, 0x49, 0x0a, 0x08, 0x53, 0x6c, 0x6f, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x4c, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x04, 0x52, 0x09, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x73, 0x22, 0xfb, 0x01,
	0x0a, 0x11, 0x4d, 0x61, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x3d, 0x0a, 0x1b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x18, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x33, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x33, 0x0a, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x6c, 0x61, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x8f, 0x01, 0x0a, 0x18,
	0x45, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73,
	0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63,
	0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x5d,
	0x0a, 0x1b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x62,
	0x79, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x52, 0x17, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x42, 0x79, 0x53, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x5f, 0x0a,
	0x17, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x42, 0x79, 0x53, 0x6c,
	0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73,
	0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0c,
	0x52, 0x0c, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x42, 0x1f,
	0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65,
	0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_metadata_proto_rawDescOnce sync.Once
	file_protos_metadata_proto_rawDescData = file_protos_metadata_proto_rawDesc
)

func file_protos_metadata_proto_rawDescGZIP() []byte {
	file_protos_metadata_proto_rawDescOnce.Do(func() {
		file_protos_metadata_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_metadata_proto_rawDescData)
	})
	return file_protos_metadata_proto_rawDescData
}

var file_protos_metadata_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_protos_metadata_proto_goTypes = []interface{}{
	(*DilithiumMetaData)(nil),        // 0: protos.DilithiumMetaData
	(*SlaveMetaData)(nil),            // 1: protos.SlaveMetaData
	(*OTSIndexMetaData)(nil),         // 2: protos.OTSIndexMetaData
	(*BlockMetaData)(nil),            // 3: protos.BlockMetaData
	(*EpochMetaData)(nil),            // 4: protos.EpochMetaData
	(*EpochStakeData)(nil),           // 5: protos.EpochStakeData
	(*SlotInfo)(nil),                 // 6: protos.SlotInfo
	(*MainChainMetaData)(nil),        // 7: protos.MainChainMetaData
	(*EpochBlockHashesMetaData)(nil), // 8: protos.EpochBlockHashesMetaData
	(*BlockHashesBySlotNumber)(nil),  // 9: protos.BlockHashesBySlotNumber
}
var file_protos_metadata_proto_depIdxs = []int32{
	6, // 0: protos.EpochMetaData.slot_info:type_name -> protos.SlotInfo
	5, // 1: protos.EpochMetaData.prev_epoch_stake_data:type_name -> protos.EpochStakeData
	9, // 2: protos.EpochBlockHashesMetaData.block_hashes_by_slot_number:type_name -> protos.BlockHashesBySlotNumber
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_protos_metadata_proto_init() }
func file_protos_metadata_proto_init() {
	if File_protos_metadata_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_protos_metadata_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DilithiumMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlaveMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OTSIndexMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochStakeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SlotInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MainChainMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochBlockHashesMetaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_metadata_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockHashesBySlotNumber); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_metadata_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_metadata_proto_goTypes,
		DependencyIndexes: file_protos_metadata_proto_depIdxs,
		MessageInfos:      file_protos_metadata_proto_msgTypes,
	}.Build()
	File_protos_metadata_proto = out.File
	file_protos_metadata_proto_rawDesc = nil
	file_protos_metadata_proto_goTypes = nil
	file_protos_metadata_proto_depIdxs = nil
}

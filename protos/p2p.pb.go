// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.8.0
// source: protos/p2p.proto

package protos

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type LegacyMessage_FuncName int32

const (
	LegacyMessage_VE         LegacyMessage_FuncName = 0
	LegacyMessage_PL         LegacyMessage_FuncName = 1
	LegacyMessage_PONG       LegacyMessage_FuncName = 2
	LegacyMessage_MR         LegacyMessage_FuncName = 3
	LegacyMessage_SFM        LegacyMessage_FuncName = 4
	LegacyMessage_BA         LegacyMessage_FuncName = 5
	LegacyMessage_BK         LegacyMessage_FuncName = 6
	LegacyMessage_FB         LegacyMessage_FuncName = 7
	LegacyMessage_PB         LegacyMessage_FuncName = 8
	LegacyMessage_TT         LegacyMessage_FuncName = 9
	LegacyMessage_ST         LegacyMessage_FuncName = 10
	LegacyMessage_AT         LegacyMessage_FuncName = 11
	LegacyMessage_SYNC       LegacyMessage_FuncName = 12
	LegacyMessage_CHAINSTATE LegacyMessage_FuncName = 13
	LegacyMessage_EBHREQ     LegacyMessage_FuncName = 14
	LegacyMessage_EBHRESP    LegacyMessage_FuncName = 15
	LegacyMessage_P2P_ACK    LegacyMessage_FuncName = 16
)

// Enum value maps for LegacyMessage_FuncName.
var (
	LegacyMessage_FuncName_name = map[int32]string{
		0:  "VE",
		1:  "PL",
		2:  "PONG",
		3:  "MR",
		4:  "SFM",
		5:  "BA",
		6:  "BK",
		7:  "FB",
		8:  "PB",
		9:  "TT",
		10: "ST",
		11: "AT",
		12: "SYNC",
		13: "CHAINSTATE",
		14: "EBHREQ",
		15: "EBHRESP",
		16: "P2P_ACK",
	}
	LegacyMessage_FuncName_value = map[string]int32{
		"VE":         0,
		"PL":         1,
		"PONG":       2,
		"MR":         3,
		"SFM":        4,
		"BA":         5,
		"BK":         6,
		"FB":         7,
		"PB":         8,
		"TT":         9,
		"ST":         10,
		"AT":         11,
		"SYNC":       12,
		"CHAINSTATE": 13,
		"EBHREQ":     14,
		"EBHRESP":    15,
		"P2P_ACK":    16,
	}
)

func (x LegacyMessage_FuncName) Enum() *LegacyMessage_FuncName {
	p := new(LegacyMessage_FuncName)
	*p = x
	return p
}

func (x LegacyMessage_FuncName) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LegacyMessage_FuncName) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_p2p_proto_enumTypes[0].Descriptor()
}

func (LegacyMessage_FuncName) Type() protoreflect.EnumType {
	return &file_protos_p2p_proto_enumTypes[0]
}

func (x LegacyMessage_FuncName) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LegacyMessage_FuncName.Descriptor instead.
func (LegacyMessage_FuncName) EnumDescriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{0, 0}
}

type LegacyMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FuncName LegacyMessage_FuncName `protobuf:"varint,1,opt,name=func_name,json=funcName,proto3,enum=protos.LegacyMessage_FuncName" json:"func_name,omitempty"`
	// Types that are assignable to Data:
	//	*LegacyMessage_NoData
	//	*LegacyMessage_VeData
	//	*LegacyMessage_PlData
	//	*LegacyMessage_PongData
	//	*LegacyMessage_MrData
	//	*LegacyMessage_BlockForAttestation
	//	*LegacyMessage_Block
	//	*LegacyMessage_FbData
	//	*LegacyMessage_PbData
	//	*LegacyMessage_TtData
	//	*LegacyMessage_StData
	//	*LegacyMessage_AtData
	//	*LegacyMessage_SyncData
	//	*LegacyMessage_ChainStateData
	//	*LegacyMessage_EpochBlockHashesRequest
	//	*LegacyMessage_EpochBlockHashesResponse
	//	*LegacyMessage_P2PAckData
	Data isLegacyMessage_Data `protobuf_oneof:"data"`
}

func (x *LegacyMessage) Reset() {
	*x = LegacyMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LegacyMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LegacyMessage) ProtoMessage() {}

func (x *LegacyMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LegacyMessage.ProtoReflect.Descriptor instead.
func (*LegacyMessage) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{0}
}

func (x *LegacyMessage) GetFuncName() LegacyMessage_FuncName {
	if x != nil {
		return x.FuncName
	}
	return LegacyMessage_VE
}

func (m *LegacyMessage) GetData() isLegacyMessage_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *LegacyMessage) GetNoData() *NoData {
	if x, ok := x.GetData().(*LegacyMessage_NoData); ok {
		return x.NoData
	}
	return nil
}

func (x *LegacyMessage) GetVeData() *VEData {
	if x, ok := x.GetData().(*LegacyMessage_VeData); ok {
		return x.VeData
	}
	return nil
}

func (x *LegacyMessage) GetPlData() *PLData {
	if x, ok := x.GetData().(*LegacyMessage_PlData); ok {
		return x.PlData
	}
	return nil
}

func (x *LegacyMessage) GetPongData() *PONGData {
	if x, ok := x.GetData().(*LegacyMessage_PongData); ok {
		return x.PongData
	}
	return nil
}

func (x *LegacyMessage) GetMrData() *MRData {
	if x, ok := x.GetData().(*LegacyMessage_MrData); ok {
		return x.MrData
	}
	return nil
}

func (x *LegacyMessage) GetBlockForAttestation() *BlockForAttestation {
	if x, ok := x.GetData().(*LegacyMessage_BlockForAttestation); ok {
		return x.BlockForAttestation
	}
	return nil
}

func (x *LegacyMessage) GetBlock() *Block {
	if x, ok := x.GetData().(*LegacyMessage_Block); ok {
		return x.Block
	}
	return nil
}

func (x *LegacyMessage) GetFbData() *FBData {
	if x, ok := x.GetData().(*LegacyMessage_FbData); ok {
		return x.FbData
	}
	return nil
}

func (x *LegacyMessage) GetPbData() *PBData {
	if x, ok := x.GetData().(*LegacyMessage_PbData); ok {
		return x.PbData
	}
	return nil
}

func (x *LegacyMessage) GetTtData() *Transaction {
	if x, ok := x.GetData().(*LegacyMessage_TtData); ok {
		return x.TtData
	}
	return nil
}

func (x *LegacyMessage) GetStData() *Transaction {
	if x, ok := x.GetData().(*LegacyMessage_StData); ok {
		return x.StData
	}
	return nil
}

func (x *LegacyMessage) GetAtData() *ProtocolTransactionData {
	if x, ok := x.GetData().(*LegacyMessage_AtData); ok {
		return x.AtData
	}
	return nil
}

func (x *LegacyMessage) GetSyncData() *SYNCData {
	if x, ok := x.GetData().(*LegacyMessage_SyncData); ok {
		return x.SyncData
	}
	return nil
}

func (x *LegacyMessage) GetChainStateData() *NodeChainState {
	if x, ok := x.GetData().(*LegacyMessage_ChainStateData); ok {
		return x.ChainStateData
	}
	return nil
}

func (x *LegacyMessage) GetEpochBlockHashesRequest() *EpochBlockHashesRequest {
	if x, ok := x.GetData().(*LegacyMessage_EpochBlockHashesRequest); ok {
		return x.EpochBlockHashesRequest
	}
	return nil
}

func (x *LegacyMessage) GetEpochBlockHashesResponse() *EpochBlockHashesResponse {
	if x, ok := x.GetData().(*LegacyMessage_EpochBlockHashesResponse); ok {
		return x.EpochBlockHashesResponse
	}
	return nil
}

func (x *LegacyMessage) GetP2PAckData() *P2PAcknowledgement {
	if x, ok := x.GetData().(*LegacyMessage_P2PAckData); ok {
		return x.P2PAckData
	}
	return nil
}

type isLegacyMessage_Data interface {
	isLegacyMessage_Data()
}

type LegacyMessage_NoData struct {
	NoData *NoData `protobuf:"bytes,3,opt,name=no_data,json=noData,proto3,oneof"`
}

type LegacyMessage_VeData struct {
	VeData *VEData `protobuf:"bytes,4,opt,name=ve_data,json=veData,proto3,oneof"`
}

type LegacyMessage_PlData struct {
	PlData *PLData `protobuf:"bytes,5,opt,name=pl_data,json=plData,proto3,oneof"`
}

type LegacyMessage_PongData struct {
	PongData *PONGData `protobuf:"bytes,6,opt,name=pong_data,json=pongData,proto3,oneof"`
}

type LegacyMessage_MrData struct {
	MrData *MRData `protobuf:"bytes,7,opt,name=mrData,proto3,oneof"`
}

type LegacyMessage_BlockForAttestation struct {
	BlockForAttestation *BlockForAttestation `protobuf:"bytes,8,opt,name=block_for_attestation,json=blockForAttestation,proto3,oneof"`
}

type LegacyMessage_Block struct {
	Block *Block `protobuf:"bytes,9,opt,name=block,proto3,oneof"`
}

type LegacyMessage_FbData struct {
	FbData *FBData `protobuf:"bytes,10,opt,name=fb_data,json=fbData,proto3,oneof"`
}

type LegacyMessage_PbData struct {
	PbData *PBData `protobuf:"bytes,11,opt,name=pb_data,json=pbData,proto3,oneof"`
}

type LegacyMessage_TtData struct {
	TtData *Transaction `protobuf:"bytes,12,opt,name=tt_data,json=ttData,proto3,oneof"`
}

type LegacyMessage_StData struct {
	StData *Transaction `protobuf:"bytes,13,opt,name=st_data,json=stData,proto3,oneof"`
}

type LegacyMessage_AtData struct {
	AtData *ProtocolTransactionData `protobuf:"bytes,14,opt,name=at_data,json=atData,proto3,oneof"`
}

type LegacyMessage_SyncData struct {
	SyncData *SYNCData `protobuf:"bytes,15,opt,name=sync_data,json=syncData,proto3,oneof"`
}

type LegacyMessage_ChainStateData struct {
	ChainStateData *NodeChainState `protobuf:"bytes,16,opt,name=chain_state_data,json=chainStateData,proto3,oneof"`
}

type LegacyMessage_EpochBlockHashesRequest struct {
	EpochBlockHashesRequest *EpochBlockHashesRequest `protobuf:"bytes,17,opt,name=epoch_block_hashes_request,json=epochBlockHashesRequest,proto3,oneof"`
}

type LegacyMessage_EpochBlockHashesResponse struct {
	EpochBlockHashesResponse *EpochBlockHashesResponse `protobuf:"bytes,18,opt,name=epoch_block_hashes_response,json=epochBlockHashesResponse,proto3,oneof"`
}

type LegacyMessage_P2PAckData struct {
	P2PAckData *P2PAcknowledgement `protobuf:"bytes,19,opt,name=p2p_ack_data,json=p2pAckData,proto3,oneof"`
}

func (*LegacyMessage_NoData) isLegacyMessage_Data() {}

func (*LegacyMessage_VeData) isLegacyMessage_Data() {}

func (*LegacyMessage_PlData) isLegacyMessage_Data() {}

func (*LegacyMessage_PongData) isLegacyMessage_Data() {}

func (*LegacyMessage_MrData) isLegacyMessage_Data() {}

func (*LegacyMessage_BlockForAttestation) isLegacyMessage_Data() {}

func (*LegacyMessage_Block) isLegacyMessage_Data() {}

func (*LegacyMessage_FbData) isLegacyMessage_Data() {}

func (*LegacyMessage_PbData) isLegacyMessage_Data() {}

func (*LegacyMessage_TtData) isLegacyMessage_Data() {}

func (*LegacyMessage_StData) isLegacyMessage_Data() {}

func (*LegacyMessage_AtData) isLegacyMessage_Data() {}

func (*LegacyMessage_SyncData) isLegacyMessage_Data() {}

func (*LegacyMessage_ChainStateData) isLegacyMessage_Data() {}

func (*LegacyMessage_EpochBlockHashesRequest) isLegacyMessage_Data() {}

func (*LegacyMessage_EpochBlockHashesResponse) isLegacyMessage_Data() {}

func (*LegacyMessage_P2PAckData) isLegacyMessage_Data() {}

type NoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoData) Reset() {
	*x = NoData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoData) ProtoMessage() {}

func (x *NoData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoData.ProtoReflect.Descriptor instead.
func (*NoData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{1}
}

type VEData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version         string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	GenesisPrevHash []byte `protobuf:"bytes,2,opt,name=genesis_prev_hash,json=genesisPrevHash,proto3" json:"genesis_prev_hash,omitempty"`
	RateLimit       uint64 `protobuf:"varint,3,opt,name=rate_limit,json=rateLimit,proto3" json:"rate_limit,omitempty"`
}

func (x *VEData) Reset() {
	*x = VEData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VEData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VEData) ProtoMessage() {}

func (x *VEData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VEData.ProtoReflect.Descriptor instead.
func (*VEData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{2}
}

func (x *VEData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *VEData) GetGenesisPrevHash() []byte {
	if x != nil {
		return x.GenesisPrevHash
	}
	return nil
}

func (x *VEData) GetRateLimit() uint64 {
	if x != nil {
		return x.RateLimit
	}
	return 0
}

type PLData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PeerIps    []string `protobuf:"bytes,1,rep,name=peer_ips,json=peerIps,proto3" json:"peer_ips,omitempty"`
	PublicPort uint32   `protobuf:"varint,2,opt,name=public_port,json=publicPort,proto3" json:"public_port,omitempty"`
}

func (x *PLData) Reset() {
	*x = PLData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PLData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PLData) ProtoMessage() {}

func (x *PLData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PLData.ProtoReflect.Descriptor instead.
func (*PLData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{3}
}

func (x *PLData) GetPeerIps() []string {
	if x != nil {
		return x.PeerIps
	}
	return nil
}

func (x *PLData) GetPublicPort() uint32 {
	if x != nil {
		return x.PublicPort
	}
	return 0
}

type PONGData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PONGData) Reset() {
	*x = PONGData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PONGData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PONGData) ProtoMessage() {}

func (x *PONGData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PONGData.ProtoReflect.Descriptor instead.
func (*PONGData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{4}
}

type MRData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hash             []byte                 `protobuf:"bytes,1,opt,name=hash,proto3" json:"hash,omitempty"`
	Type             LegacyMessage_FuncName `protobuf:"varint,2,opt,name=type,proto3,enum=protos.LegacyMessage_FuncName" json:"type,omitempty"`
	BlockProposer    []byte                 `protobuf:"bytes,3,opt,name=block_proposer,json=blockProposer,proto3" json:"block_proposer,omitempty"`
	ParentHeaderHash []byte                 `protobuf:"bytes,4,opt,name=parent_header_hash,json=parentHeaderHash,proto3" json:"parent_header_hash,omitempty"`
	SlotNumber       uint64                 `protobuf:"varint,5,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
}

func (x *MRData) Reset() {
	*x = MRData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MRData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MRData) ProtoMessage() {}

func (x *MRData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MRData.ProtoReflect.Descriptor instead.
func (*MRData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{5}
}

func (x *MRData) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

func (x *MRData) GetType() LegacyMessage_FuncName {
	if x != nil {
		return x.Type
	}
	return LegacyMessage_VE
}

func (x *MRData) GetBlockProposer() []byte {
	if x != nil {
		return x.BlockProposer
	}
	return nil
}

func (x *MRData) GetParentHeaderHash() []byte {
	if x != nil {
		return x.ParentHeaderHash
	}
	return nil
}

func (x *MRData) GetSlotNumber() uint64 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

type BKData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MrData *MRData `protobuf:"bytes,1,opt,name=mrData,proto3" json:"mrData,omitempty"`
	Block  *Block  `protobuf:"bytes,2,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *BKData) Reset() {
	*x = BKData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BKData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BKData) ProtoMessage() {}

func (x *BKData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BKData.ProtoReflect.Descriptor instead.
func (*BKData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{6}
}

func (x *BKData) GetMrData() *MRData {
	if x != nil {
		return x.MrData
	}
	return nil
}

func (x *BKData) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type BlockForAttestation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block     *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
	Signature []byte `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (x *BlockForAttestation) Reset() {
	*x = BlockForAttestation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockForAttestation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockForAttestation) ProtoMessage() {}

func (x *BlockForAttestation) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockForAttestation.ProtoReflect.Descriptor instead.
func (*BlockForAttestation) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{7}
}

func (x *BlockForAttestation) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

func (x *BlockForAttestation) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type FBData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BlockHeaderHash []byte `protobuf:"bytes,1,opt,name=block_header_hash,json=blockHeaderHash,proto3" json:"block_header_hash,omitempty"`
}

func (x *FBData) Reset() {
	*x = FBData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FBData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FBData) ProtoMessage() {}

func (x *FBData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FBData.ProtoReflect.Descriptor instead.
func (*FBData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{8}
}

func (x *FBData) GetBlockHeaderHash() []byte {
	if x != nil {
		return x.BlockHeaderHash
	}
	return nil
}

type PBData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Block *Block `protobuf:"bytes,1,opt,name=block,proto3" json:"block,omitempty"`
}

func (x *PBData) Reset() {
	*x = PBData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PBData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PBData) ProtoMessage() {}

func (x *PBData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PBData.ProtoReflect.Descriptor instead.
func (*PBData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{9}
}

func (x *PBData) GetBlock() *Block {
	if x != nil {
		return x.Block
	}
	return nil
}

type SYNCData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State string `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
}

func (x *SYNCData) Reset() {
	*x = SYNCData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SYNCData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SYNCData) ProtoMessage() {}

func (x *SYNCData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SYNCData.ProtoReflect.Descriptor instead.
func (*SYNCData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{10}
}

func (x *SYNCData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type P2PAcknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BytesProcessed uint32 `protobuf:"varint,1,opt,name=bytes_processed,json=bytesProcessed,proto3" json:"bytes_processed,omitempty"`
}

func (x *P2PAcknowledgement) Reset() {
	*x = P2PAcknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PAcknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PAcknowledgement) ProtoMessage() {}

func (x *P2PAcknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PAcknowledgement.ProtoReflect.Descriptor instead.
func (*P2PAcknowledgement) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{11}
}

func (x *P2PAcknowledgement) GetBytesProcessed() uint32 {
	if x != nil {
		return x.BytesProcessed
	}
	return 0
}

type NodeChainState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SlotNumber       uint64 `protobuf:"varint,1,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	HeaderHash       []byte `protobuf:"bytes,2,opt,name=header_hash,json=headerHash,proto3" json:"header_hash,omitempty"`
	TotalStakeAmount []byte `protobuf:"bytes,3,opt,name=total_stake_amount,json=totalStakeAmount,proto3" json:"total_stake_amount,omitempty"`
	Version          string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	Timestamp        uint64 `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
}

func (x *NodeChainState) Reset() {
	*x = NodeChainState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeChainState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeChainState) ProtoMessage() {}

func (x *NodeChainState) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeChainState.ProtoReflect.Descriptor instead.
func (*NodeChainState) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{12}
}

func (x *NodeChainState) GetSlotNumber() uint64 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *NodeChainState) GetHeaderHash() []byte {
	if x != nil {
		return x.HeaderHash
	}
	return nil
}

func (x *NodeChainState) GetTotalStakeAmount() []byte {
	if x != nil {
		return x.TotalStakeAmount
	}
	return nil
}

func (x *NodeChainState) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NodeChainState) GetTimestamp() uint64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

type ProtocolTransactionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx                      *ProtocolTransaction `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
	SlotNumber              uint64               `protobuf:"varint,2,opt,name=slot_number,json=slotNumber,proto3" json:"slot_number,omitempty"`
	BlockProposer           []byte               `protobuf:"bytes,3,opt,name=block_proposer,json=blockProposer,proto3" json:"block_proposer,omitempty"`
	ParentHeaderHash        []byte               `protobuf:"bytes,4,opt,name=parent_header_hash,json=parentHeaderHash,proto3" json:"parent_header_hash,omitempty"`
	PartialBlockSigningHash []byte               `protobuf:"bytes,5,opt,name=partial_block_signing_hash,json=partialBlockSigningHash,proto3" json:"partial_block_signing_hash,omitempty"`
}

func (x *ProtocolTransactionData) Reset() {
	*x = ProtocolTransactionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProtocolTransactionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProtocolTransactionData) ProtoMessage() {}

func (x *ProtocolTransactionData) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProtocolTransactionData.ProtoReflect.Descriptor instead.
func (*ProtocolTransactionData) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{13}
}

func (x *ProtocolTransactionData) GetTx() *ProtocolTransaction {
	if x != nil {
		return x.Tx
	}
	return nil
}

func (x *ProtocolTransactionData) GetSlotNumber() uint64 {
	if x != nil {
		return x.SlotNumber
	}
	return 0
}

func (x *ProtocolTransactionData) GetBlockProposer() []byte {
	if x != nil {
		return x.BlockProposer
	}
	return nil
}

func (x *ProtocolTransactionData) GetParentHeaderHash() []byte {
	if x != nil {
		return x.ParentHeaderHash
	}
	return nil
}

func (x *ProtocolTransactionData) GetPartialBlockSigningHash() []byte {
	if x != nil {
		return x.PartialBlockSigningHash
	}
	return nil
}

type EpochBlockHashesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Epoch               uint64 `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
	FinalizedHeaderHash []byte `protobuf:"bytes,2,opt,name=finalized_header_hash,json=finalizedHeaderHash,proto3" json:"finalized_header_hash,omitempty"`
}

func (x *EpochBlockHashesRequest) Reset() {
	*x = EpochBlockHashesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochBlockHashesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochBlockHashesRequest) ProtoMessage() {}

func (x *EpochBlockHashesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochBlockHashesRequest.ProtoReflect.Descriptor instead.
func (*EpochBlockHashesRequest) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{14}
}

func (x *EpochBlockHashesRequest) GetEpoch() uint64 {
	if x != nil {
		return x.Epoch
	}
	return 0
}

func (x *EpochBlockHashesRequest) GetFinalizedHeaderHash() []byte {
	if x != nil {
		return x.FinalizedHeaderHash
	}
	return nil
}

type EpochBlockHashesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsHeaderHashFinalized    bool                      `protobuf:"varint,1,opt,name=is_header_hash_finalized,json=isHeaderHashFinalized,proto3" json:"is_header_hash_finalized,omitempty"`
	EpochBlockHashesMetaData *EpochBlockHashesMetaData `protobuf:"bytes,2,opt,name=epoch_block_hashes_meta_data,json=epochBlockHashesMetaData,proto3" json:"epoch_block_hashes_meta_data,omitempty"`
}

func (x *EpochBlockHashesResponse) Reset() {
	*x = EpochBlockHashesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_protos_p2p_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EpochBlockHashesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EpochBlockHashesResponse) ProtoMessage() {}

func (x *EpochBlockHashesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_p2p_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EpochBlockHashesResponse.ProtoReflect.Descriptor instead.
func (*EpochBlockHashesResponse) Descriptor() ([]byte, []int) {
	return file_protos_p2p_proto_rawDescGZIP(), []int{15}
}

func (x *EpochBlockHashesResponse) GetIsHeaderHashFinalized() bool {
	if x != nil {
		return x.IsHeaderHashFinalized
	}
	return false
}

func (x *EpochBlockHashesResponse) GetEpochBlockHashesMetaData() *EpochBlockHashesMetaData {
	if x != nil {
		return x.EpochBlockHashesMetaData
	}
	return nil
}

var File_protos_p2p_proto protoreflect.FileDescriptor

var file_protos_p2p_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x70, 0x32, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x12, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xc4, 0x09, 0x0a, 0x0d, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x3b, 0x0a, 0x09, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x65,
	0x67, 0x61, 0x63, 0x79, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75, 0x6e, 0x63,
	0x4e, 0x61, 0x6d, 0x65, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29,
	0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x06, 0x6e, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x76, 0x65, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x56, 0x45, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x76, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x07, 0x70, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50,
	0x4c, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2f, 0x0a, 0x09, 0x70, 0x6f, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x4f, 0x4e, 0x47,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x06, 0x6d, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x52, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x06, 0x6d, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x15, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x66, 0x6f, 0x72, 0x5f, 0x61, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x41, 0x74, 0x74, 0x65, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x13, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x46,
	0x6f, 0x72, 0x41, 0x74, 0x74, 0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a,
	0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x29, 0x0a, 0x07, 0x66, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x46,
	0x42, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06, 0x66, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x29, 0x0a, 0x07, 0x70, 0x62, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x42, 0x44, 0x61, 0x74, 0x61,
	0x48, 0x00, 0x52, 0x06, 0x70, 0x62, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x06, 0x74, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x07, 0x73, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x06, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x07, 0x61, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x06,
	0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x79, 0x6e, 0x63, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x53, 0x59, 0x4e, 0x43, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x08, 0x73,
	0x79, 0x6e, 0x63, 0x44, 0x61, 0x74, 0x61, 0x12, 0x42, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5e, 0x0a, 0x1a, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x17, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61,
	0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x1b, 0x65,
	0x70, 0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e,
	0x0a, 0x0c, 0x70, 0x32, 0x70, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x32,
	0x50, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x70, 0x32, 0x70, 0x41, 0x63, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x22, 0xad,
	0x01, 0x0a, 0x08, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x06, 0x0a, 0x02, 0x56,
	0x45, 0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x50, 0x4c, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x06, 0x0a, 0x02, 0x4d, 0x52, 0x10, 0x03, 0x12, 0x07, 0x0a,
	0x03, 0x53, 0x46, 0x4d, 0x10, 0x04, 0x12, 0x06, 0x0a, 0x02, 0x42, 0x41, 0x10, 0x05, 0x12, 0x06,
	0x0a, 0x02, 0x42, 0x4b, 0x10, 0x06, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x42, 0x10, 0x07, 0x12, 0x06,
	0x0a, 0x02, 0x50, 0x42, 0x10, 0x08, 0x12, 0x06, 0x0a, 0x02, 0x54, 0x54, 0x10, 0x09, 0x12, 0x06,
	0x0a, 0x02, 0x53, 0x54, 0x10, 0x0a, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x54, 0x10, 0x0b, 0x12, 0x08,
	0x0a, 0x04, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x0c, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x48, 0x41, 0x49,
	0x4e, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x0d, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x42, 0x48, 0x52,
	0x45, 0x51, 0x10, 0x0e, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x42, 0x48, 0x52, 0x45, 0x53, 0x50, 0x10,
	0x0f, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x32, 0x50, 0x5f, 0x41, 0x43, 0x4b, 0x10, 0x10, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x08, 0x0a, 0x06, 0x4e, 0x6f, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x6d, 0x0a, 0x06, 0x56, 0x45, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x5f,
	0x70, 0x72, 0x65, 0x76, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0f, 0x67, 0x65, 0x6e, 0x65, 0x73, 0x69, 0x73, 0x50, 0x72, 0x65, 0x76, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x44, 0x0a, 0x06, 0x50, 0x4c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x65, 0x65,
	0x72, 0x5f, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x70,
	0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x50, 0x6f, 0x72, 0x74, 0x22, 0x0a, 0x0a, 0x08, 0x50, 0x4f, 0x4e, 0x47, 0x44, 0x61, 0x74,
	0x61, 0x22, 0xc6, 0x01, 0x0a, 0x06, 0x4d, 0x52, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x68, 0x61, 0x73, 0x68,
	0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x46, 0x75, 0x6e, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73,
	0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x73, 0x6c, 0x6f, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x55, 0x0a, 0x06, 0x42, 0x4b,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x6d, 0x72, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x4d, 0x52,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x6d, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x58, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x46, 0x6f, 0x72, 0x41, 0x74, 0x74,
	0x65, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0x34, 0x0a, 0x06, 0x46,
	0x42, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73,
	0x68, 0x22, 0x2d, 0x0a, 0x06, 0x50, 0x42, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x22, 0x20, 0x0a, 0x08, 0x53, 0x59, 0x4e, 0x43, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x3d, 0x0a, 0x12, 0x50, 0x32, 0x50, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x79, 0x74, 0x65,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x0e, 0x62, 0x79, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x22, 0xb8, 0x01, 0x0a, 0x0e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x73, 0x74, 0x61, 0x6b, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x6b, 0x65, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xf9, 0x01, 0x0a,
	0x17, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x02, 0x74, 0x78, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x6c, 0x6f, 0x74,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x50, 0x72, 0x6f, 0x70, 0x6f, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a,
	0x12, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68,
	0x61, 0x73, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x12, 0x3b, 0x0a, 0x1a, 0x70,
	0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x73, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x17, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x53, 0x69, 0x67,
	0x6e, 0x69, 0x6e, 0x67, 0x48, 0x61, 0x73, 0x68, 0x22, 0x63, 0x0a, 0x17, 0x45, 0x70, 0x6f, 0x63,
	0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x15, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x13, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x22, 0xb5, 0x01,
	0x0a, 0x18, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73,
	0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x5f, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x69, 0x73,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x48, 0x61, 0x73, 0x68, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x64, 0x12, 0x60, 0x0a, 0x1c, 0x65, 0x70, 0x6f, 0x63, 0x68, 0x5f, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x65, 0x73, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x45, 0x70, 0x6f, 0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x4d, 0x65, 0x74, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x18, 0x65, 0x70, 0x6f,
	0x63, 0x68, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x4d, 0x65, 0x74,
	0x61, 0x44, 0x61, 0x74, 0x61, 0x42, 0x1f, 0x5a, 0x1d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x68, 0x65, 0x51, 0x52, 0x4c, 0x2f, 0x7a, 0x6f, 0x6e, 0x64, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_protos_p2p_proto_rawDescOnce sync.Once
	file_protos_p2p_proto_rawDescData = file_protos_p2p_proto_rawDesc
)

func file_protos_p2p_proto_rawDescGZIP() []byte {
	file_protos_p2p_proto_rawDescOnce.Do(func() {
		file_protos_p2p_proto_rawDescData = protoimpl.X.CompressGZIP(file_protos_p2p_proto_rawDescData)
	})
	return file_protos_p2p_proto_rawDescData
}

var file_protos_p2p_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_protos_p2p_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protos_p2p_proto_goTypes = []interface{}{
	(LegacyMessage_FuncName)(0),      // 0: protos.LegacyMessage.FuncName
	(*LegacyMessage)(nil),            // 1: protos.LegacyMessage
	(*NoData)(nil),                   // 2: protos.NoData
	(*VEData)(nil),                   // 3: protos.VEData
	(*PLData)(nil),                   // 4: protos.PLData
	(*PONGData)(nil),                 // 5: protos.PONGData
	(*MRData)(nil),                   // 6: protos.MRData
	(*BKData)(nil),                   // 7: protos.BKData
	(*BlockForAttestation)(nil),      // 8: protos.BlockForAttestation
	(*FBData)(nil),                   // 9: protos.FBData
	(*PBData)(nil),                   // 10: protos.PBData
	(*SYNCData)(nil),                 // 11: protos.SYNCData
	(*P2PAcknowledgement)(nil),       // 12: protos.P2PAcknowledgement
	(*NodeChainState)(nil),           // 13: protos.NodeChainState
	(*ProtocolTransactionData)(nil),  // 14: protos.ProtocolTransactionData
	(*EpochBlockHashesRequest)(nil),  // 15: protos.EpochBlockHashesRequest
	(*EpochBlockHashesResponse)(nil), // 16: protos.EpochBlockHashesResponse
	(*Block)(nil),                    // 17: protos.Block
	(*Transaction)(nil),              // 18: protos.Transaction
	(*ProtocolTransaction)(nil),      // 19: protos.ProtocolTransaction
	(*EpochBlockHashesMetaData)(nil), // 20: protos.EpochBlockHashesMetaData
}
var file_protos_p2p_proto_depIdxs = []int32{
	0,  // 0: protos.LegacyMessage.func_name:type_name -> protos.LegacyMessage.FuncName
	2,  // 1: protos.LegacyMessage.no_data:type_name -> protos.NoData
	3,  // 2: protos.LegacyMessage.ve_data:type_name -> protos.VEData
	4,  // 3: protos.LegacyMessage.pl_data:type_name -> protos.PLData
	5,  // 4: protos.LegacyMessage.pong_data:type_name -> protos.PONGData
	6,  // 5: protos.LegacyMessage.mrData:type_name -> protos.MRData
	8,  // 6: protos.LegacyMessage.block_for_attestation:type_name -> protos.BlockForAttestation
	17, // 7: protos.LegacyMessage.block:type_name -> protos.Block
	9,  // 8: protos.LegacyMessage.fb_data:type_name -> protos.FBData
	10, // 9: protos.LegacyMessage.pb_data:type_name -> protos.PBData
	18, // 10: protos.LegacyMessage.tt_data:type_name -> protos.Transaction
	18, // 11: protos.LegacyMessage.st_data:type_name -> protos.Transaction
	14, // 12: protos.LegacyMessage.at_data:type_name -> protos.ProtocolTransactionData
	11, // 13: protos.LegacyMessage.sync_data:type_name -> protos.SYNCData
	13, // 14: protos.LegacyMessage.chain_state_data:type_name -> protos.NodeChainState
	15, // 15: protos.LegacyMessage.epoch_block_hashes_request:type_name -> protos.EpochBlockHashesRequest
	16, // 16: protos.LegacyMessage.epoch_block_hashes_response:type_name -> protos.EpochBlockHashesResponse
	12, // 17: protos.LegacyMessage.p2p_ack_data:type_name -> protos.P2PAcknowledgement
	0,  // 18: protos.MRData.type:type_name -> protos.LegacyMessage.FuncName
	6,  // 19: protos.BKData.mrData:type_name -> protos.MRData
	17, // 20: protos.BKData.block:type_name -> protos.Block
	17, // 21: protos.BlockForAttestation.block:type_name -> protos.Block
	17, // 22: protos.PBData.block:type_name -> protos.Block
	19, // 23: protos.ProtocolTransactionData.tx:type_name -> protos.ProtocolTransaction
	20, // 24: protos.EpochBlockHashesResponse.epoch_block_hashes_meta_data:type_name -> protos.EpochBlockHashesMetaData
	25, // [25:25] is the sub-list for method output_type
	25, // [25:25] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_protos_p2p_proto_init() }
func file_protos_p2p_proto_init() {
	if File_protos_p2p_proto != nil {
		return
	}
	file_protos_block_proto_init()
	file_protos_metadata_proto_init()
	file_protos_transaction_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_protos_p2p_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LegacyMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VEData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PLData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PONGData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MRData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BKData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockForAttestation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FBData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PBData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SYNCData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PAcknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeChainState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProtocolTransactionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochBlockHashesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_protos_p2p_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EpochBlockHashesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_protos_p2p_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*LegacyMessage_NoData)(nil),
		(*LegacyMessage_VeData)(nil),
		(*LegacyMessage_PlData)(nil),
		(*LegacyMessage_PongData)(nil),
		(*LegacyMessage_MrData)(nil),
		(*LegacyMessage_BlockForAttestation)(nil),
		(*LegacyMessage_Block)(nil),
		(*LegacyMessage_FbData)(nil),
		(*LegacyMessage_PbData)(nil),
		(*LegacyMessage_TtData)(nil),
		(*LegacyMessage_StData)(nil),
		(*LegacyMessage_AtData)(nil),
		(*LegacyMessage_SyncData)(nil),
		(*LegacyMessage_ChainStateData)(nil),
		(*LegacyMessage_EpochBlockHashesRequest)(nil),
		(*LegacyMessage_EpochBlockHashesResponse)(nil),
		(*LegacyMessage_P2PAckData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_protos_p2p_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_protos_p2p_proto_goTypes,
		DependencyIndexes: file_protos_p2p_proto_depIdxs,
		EnumInfos:         file_protos_p2p_proto_enumTypes,
		MessageInfos:      file_protos_p2p_proto_msgTypes,
	}.Build()
	File_protos_p2p_proto = out.File
	file_protos_p2p_proto_rawDesc = nil
	file_protos_p2p_proto_goTypes = nil
	file_protos_p2p_proto_depIdxs = nil
}

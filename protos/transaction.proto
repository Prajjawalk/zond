// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

syntax = "proto3";

option go_package = "github.com/theQRL/zond/protos";

package protos;

// This transaction must be rejected if the number of
// Dilithium pks is not proportional to the 10k funds
message Stake {
    repeated bytes dilithium_pks = 1;  // Max 100, each key will lock 10k funds
    bool stake = 2;  // True when you want to stake the list of dilithium pks
}

message Transfer {
    repeated bytes addrs_to = 1;
    repeated uint64 amounts = 2;
    repeated bytes slave_pks = 3;
    bytes message = 4;
}

message CoinBase {
    uint64 block_proposer_reward = 1;
    uint64 attestor_reward = 2;

    uint64 fee_reward = 3;  // TODO: merge multiple rewards into a single reward variable
}

message Transaction {
    uint64 network_id = 1;
    bytes master_addr = 2;
    uint64 fee = 3;
    uint64 nonce = 4;
    bytes pk = 5;
    bytes signature = 6;

    oneof type {
        Stake stake = 7;
        Transfer transfer = 8;
    }
}

message TransactionList {
    repeated Transaction txs = 1;
}

message ProtocolTransaction {
    uint64 network_id = 1;
    uint64 nonce = 2;
    bytes pk = 3;
    bytes signature = 4;

    oneof type {
        CoinBase coin_base = 5;
        Attest attest = 6;
    }
}

message Attest {
}
